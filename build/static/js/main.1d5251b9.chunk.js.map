{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","numberOfRow","numberOfColumn","data","handleClick","bind","assertThisInitialized","onExportClick","refs","row","value","column","i","push","j","exportBtn","disabled","setState","html","document","querySelector","outerHTML","export_to_csv","filename","csv","rows","querySelectorAll","length","cols","join","download_csv","csvFile","downloadLink","Blob","type","createElement","download","href","window","URL","createObjectURL","style","display","body","appendChild","click","_this2","react_default","a","className","ref","maxLength","onkeyup","onClick","App_Table","Component","Thead","_ref","n","handleColumn","arr","_loop","Row","_ref2","handleRow","map","cell","App_EditableCell","Table","_this3","newData","filter","el","_this4","id","EditableCell","React","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.1d5251b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      numberOfRow: 0,\r\n      numberOfColumn: 0,\r\n      data: []\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.onExportClick = this.onExportClick.bind(this);\r\n  }\r\n\r\n  //Add row and column click handler\r\n  handleClick() {\r\n    let numberOfColumn = 0;\r\n    let numberOfRow = 0;\r\n    let data = [];\r\n\r\n    numberOfRow = this.refs.row.value;\r\n    numberOfColumn = this.refs.column.value;\r\n\r\n    for (var i = 0; i < numberOfRow; i++) {\r\n      data.push([0])\r\n        for (var j = 0; j < numberOfColumn; j++) {\r\n            data[i][j] = 0;\r\n        }\r\n    }\r\n\r\n    if(numberOfRow > 0 && numberOfColumn > 0) {\r\n      this.refs.exportBtn.disabled = false;\r\n    }\r\n    \r\n    this.setState({\r\n      numberOfRow,\r\n      numberOfColumn,\r\n      data\r\n    });\r\n  }\r\n\r\n  ////Export CSV Click handler\r\n  onExportClick() {\r\n    var html = document.querySelector(\"table\").outerHTML;\r\n    this.export_to_csv(html, \"table.csv\");\r\n  }\r\n\r\n  //Export to CSV function\r\n  export_to_csv(html, filename) {\r\n    var csv = [];\r\n    var rows = document.querySelectorAll(\"table tr\");\r\n    \r\n      for (var i = 0; i < rows.length-1; i++) {\r\n        var row = [], cols = rows[i].querySelectorAll(\"input\");\r\n      \r\n          for (var j = 0; j < cols.length; j++) {\r\n              row.push(cols[j].value);\r\n          }\r\n          \r\n      csv.push(row.join(\",\"));    \r\n    }\r\n    this.download_csv(csv.join(\"\\n\"), filename);\r\n  }\r\n\r\n  //Download CSV method\r\n  download_csv(csv, filename) {\r\n      var csvFile;\r\n      var downloadLink;\r\n\r\n      csvFile = new Blob([csv], {type: \"text/csv\"});\r\n\r\n      downloadLink = document.createElement(\"a\");\r\n      downloadLink.download = filename;\r\n      downloadLink.href = window.URL.createObjectURL(csvFile);\r\n      downloadLink.style.display = \"none\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <div className=\"userInput\">\r\n            <label>Row</label>\r\n            <input type=\"text\" ref=\"row\" maxLength=\"2\" onkeyup=\"this.value = this.value.replace(/[^a-z]/, '')\" />\r\n            <label>Column</label>\r\n            <input type=\"text\" ref=\"column\" maxLength=\"2\" onkeyup=\"this.value = this.value.replace(/[^a-z]/, '')\" />\r\n            <button onClick={this.handleClick}>Add</button>\r\n            <button ref=\"exportBtn\" onClick={() => this.onExportClick()}>Export to CSV</button>\r\n          </div>\r\n          {\r\n            this.state.data.length > 0 &&\r\n            <div className=\"display\">\r\n              <Table data={this.state.data} />\r\n            </div>\r\n          }\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Thead({ n, handleColumn }) {\r\n  const arr = [];\r\n  for (let i = 0; i < n; i++) {\r\n    arr.push(<td><button onClick={() => handleColumn(i)}>Remove</button></td>);\r\n  }\r\n  return <thead><tr>{arr}</tr></thead>;\r\n}\r\n\r\nfunction Row({ row, i, handleRow }) {\r\n  return (\r\n    <tr>\r\n      {row.map(cell => <EditableCell>{cell}</EditableCell>)} \r\n      <td><button onClick={() => handleRow(i)}>x</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nclass Table extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: props.data };\r\n    this.handleColumn = this.handleColumn.bind(this);\r\n    this.handleRow = this.handleRow.bind(this);\r\n  }\r\n\r\n  handleColumn(n) {\r\n    const newData = this.state.data.map(row => {\r\n      return row.filter((el, i) => i !== n);\r\n    });\r\n    this.setState({ data: newData });\r\n  }\r\n\r\n  handleRow(n) {\r\n    const newData = this.state.data.filter((el, i) => i !== n);\r\n    this.setState({ data: newData });\r\n  }\r\n\r\n  render() {\r\n      let { data } = this.state;\r\n\t\t\tif (!data.length) return <div></div>\r\n      return (\r\n        <div id=\"Table\">\r\n              <table>\r\n              <Thead n={data[0].length} handleColumn={this.handleColumn} />\r\n                <tbody>\r\n                  {data.map((row, i) => <Row row={row} i={i} handleRow={this.handleRow} />)}\r\n                </tbody> \r\n              </table>\r\n        </div>\r\n      );      \r\n\r\n    }\r\n}\r\n\r\nclass EditableCell extends React.Component {\r\n  render() {\r\n    return (\r\n      <td>\r\n        <input type='text' />\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}